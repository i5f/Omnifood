/* 
  --- Typography ---

  - Font Sizes -
  10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

  - Font Weights -

  - Line Heights -
  Default: 1

  --- Colors ---
  Primary: #e67e22
  Tints: #fdf2e9
  Shades: #cf711f
  Accents: #
  Greys: #555, #333

  --- Shadows ---

  --- Border Radius ---
  
  --- Whitespace ---
  - Spacing System -
  2 / 4 / 8 / 12 / 16 / 20 / 24 / 32 / 48 / 64 / 80 / 96 / 128
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  /* font-size: 10px; we commented this one since even if the user changes the font size, then this static value will stay the same and remain to be smaller or bigger than the desired one, instead of that we use the following */
  /* 10px / 16px = 0.625 = 62.5% */
  /* percentage of the user's browser font-size setting */
  font-size: 62.5%;
}

body {
  font-family: "Rubik", sans-serif;
  line-height: 1;
  font-weight: 400;
  color: #555;
}

/* .test {
  background-color: red;
  padding: 4rem;
  /* we could use % but it shrinks the element all the time, with max-width the element will have 1000px width until the screen is smaller, and then it will shrink, unlike the % does */
/* max-width: 1000px; */
/* we can also use rem which stands for root element font size, strange yes, but its value will take the root element's font-size, which is the html element's font size btw, if not declared, then its default value is 16px */
/* now since 1rem = 16px, then 50rem = 50 * 16 = 800px
  max-width: 50rem;
  color: white;
  font-size: 2rem;
} */

/*********************************/
/** General Reusable Components **/
/*********************************/

.heading-primary {
  font-size: 5.2rem;
  font-weight: 700;
  line-height: 1.05;
  color: #333;
  letter-spacing: -0.5px;
  margin-bottom: 3.2rem;
}

.btn:link,
.btn:visited {
  display: inline-block;

  background-color: #e67e22;
  text-decoration: none;
  font-size: 2rem;
  font-weight: 600;
  padding: 1.6rem 3.2rem;
  border-radius: 9px;

  /* put transition inside the original state here */
  transition: all 300ms;
}

.btn--full:link,
.btn--full:visited {
  background-color: #e67e22;
  color: #fff;
}

.btn--full:hover,
.btn--full:active {
  background-color: #cf711f;
  color: #fff;
}

.btn--outline:link,
.btn--outline:visited {
  background-color: #fff;
  color: #555;
}

.btn--outline:hover,
.btn--outline:active {
  background-color: #fdf2e9;
  /* this border isn't inside of the button so it jams the elements a little bit */
  /* border: 3px solid #fff; */
  /* so we use the following trick, no offset, in no direction, 3px wide in white color, and with the keyword inset, it will appear in the inside of the button so voila! */
  box-shadow: inset 0 0 0 3px #fff;
}

.margin-right-sm {
  margin-right: 1.6rem !important;
}

/*********************************/
/************* Header ************/
/*********************************/

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;

  background-color: #fdf2e9;

  /* this header will be sticky later, so we will give a fixed height */
  height: 9.6rem;
  padding: 0 4.8rem;
}

.logo {
  height: 2.2rem;
}

/*********************************/
/********** Hero Section *********/
/*********************************/
.section-hero {
  background-color: #fdf2e9;
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  /* specifying width of a big element like hero is not to make stuff harder, it's for creating a little bit of whitespace on the sides of the page, and with centering it, creating a beautiful layout */
  max-width: 130rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  margin: 0 auto;
  padding: 0 3.2rem;
  gap: 9.6rem;
  align-items: center;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.delivered-meals {
  display: flex;
  align-items: center;
  gap: 1.6rem;
  margin-top: 8rem;
}

.delivered-imgs {
  display: flex;
}

.delivered-imgs img {
  height: 4.8rem;
  width: 4.8rem;
  border-radius: 50%;
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}

.delivered-imgs img:last-child {
  margin: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-text span {
  color: #cf711f;
  font-weight: 700;
}

.hero-img {
  width: 100%;
}
